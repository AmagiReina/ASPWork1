@model Homework1.Entities.Survey

@{
    ViewBag.Title = "Index";
}

    <h2>Какую книгу я бы хотел взять в библиотеке?</h2>

@using (Html.BeginForm("Index", "Survey", FormMethod.Post, new { enctype = "multipart/form-data" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Survey</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.Label("Введите ваше имя ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Какая книга из выбранных вам нравится ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BookId, ViewBag.BookList as SelectList)
                @Html.ValidationMessageFor(model => model.BookId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Любимый жанр ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <table>
                    @foreach (var genre in (SelectList)ViewBag.GenreList)
                    {
                        <tr>
                            <td>
                                @Html.RadioButtonFor(model => model.GenreId, genre.Value,
                                 new { id = genre.Value, name = "Genres", @value = genre.Value, @text = genre.Text })
                                <label for="list@(genre.Value)" style="color:#808080;font-weight:100">@genre.Text</label>
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Есть ли нужная Вам книга в библиотеке", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.isBookAtLibrary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.Label("Есть")
                @Html.ValidationMessageFor(model => model.isBookAtLibrary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Ваш дополнительный комментарий ", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
